module STUN;

type Msgtype = enum { REQ = 1, IND = 17, SUC = 257, ERR = 273};

public type Stun = unit {
    msg_type: uint16 &convert=Msgtype($$);
    msg_length: uint16 {self.remainder = $$;}
    cookie: uint32;
    trans_id: bytes &size=12;
    attributes: Attribute[]; 


    on %done {
	print "Type: %" % self.msg_type;
	print "Length: %" % self.msg_length;
	print "Cookie: %" % self.cookie;
	print "Transaction id: %" % self.trans_id;
	print "Attributes: %" % self.attributes;

    }

    var remainder: uint16;

};

type Attribute = unit {
    attr_type: uint16;
    attr_length: uint16 {
	self.value_length = $$; 
	self.value_padding = padding(self.value_length);
	self.total_size = self.value_length + self.value_padding;
	}
    attr_value: bytes &size=self.total_size;
    on %done {
	print self;
    }
    var value_length: uint16;
    var value_padding: uint16;
    var total_size: uint16;
};

function padding(x: uint16): uint16 {
    if (x % 4 > 0) {
	return 4 - (x % 4);
    } else {
	return 0;
    }
}

